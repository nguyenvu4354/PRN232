@{
    ViewData["Title"] = "Sửa sản phẩm (Staff)";
    Layout = "~/Views/Shared/_StaffLayout.cshtml";
    var productId = ViewBag.ProductId;
}
<h2>Sửa sản phẩm</h2>
<form id="editForm" enctype="multipart/form-data">
    <input type="hidden" name="Product.ProductId" id="productId" value="@productId" />
    <div class="mb-3">
        <label>Tên sản phẩm</label>
        <input type="text" class="form-control" name="Product.ProductName" id="productName" required value="@Model?.ProductName" />
    </div>
    <div class="mb-3">
        <label>Giá</label>
        <input type="number" class="form-control" name="Product.Price" id="price" required value="@Model?.Price" />
    </div>
    <div class="mb-3">
        <label>Brand</label>
        <select class="form-control" name="Product.BrandName" id="brandSelect" required></select>
    </div>
    <div class="mb-3">
        <label>Category</label>
        <select class="form-control" name="Product.CategoryName" id="categorySelect" required></select>
    </div>
    <div class="mb-3">
        <label>Ảnh sản phẩm</label>
        <input type="file" class="form-control" name="Product.ImageFile" accept="image/*" />
        <img id="previewImg" src="#" style="max-width:120px; margin-top:10px; display:none;" />
    </div>
    <div class="mb-3">
        <label>Số lượng</label>
        <input type="number" class="form-control" name="Product.StockQuantity" id="stockQuantity" required />
    </div>
    <button type="submit" class="btn btn-primary">Lưu</button>
    <a href="@Url.Action("StaffProductList", "StaffProduct")" class="btn btn-secondary">Quay lại</a>
</form>
@section Scripts {
    <script>
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
}
        const productId = '@productId';

        // Hàm load dropdown Brand
        function loadBrands(selectedId) {
            return fetch('https://localhost:7168/api/BrandManagement', {
                headers: { 'Authorization': 'Bearer ' + getCookie('AccessToken') },
                credentials: 'include'
            })
                .then(r => r.json())
                .then(data => {
                    let html = '<option value="">Chọn Brand</option>'; // Option mặc định
                    data.forEach(b => {
                        html += `<option value='${b.id}'>${b.name}</option>`;
                    });
                    document.getElementById('brandSelect').innerHTML = html;
                    // Gán giá trị selectedId sau khi dropdown được nạp
                    if (selectedId) {
                        const select = document.getElementById('brandSelect');
                        select.value = selectedId;
                    }
                    return Promise.resolve();
                })
                .catch(error => console.error('Error loading brands:', error));
        }

        // Hàm load dropdown Category
        function loadCategories(selectedId) {
            return fetch('https://localhost:7168/api/CategoriesManagement', {
                headers: { 'Authorization': 'Bearer ' + getCookie('AccessToken') },
                credentials: 'include'
            })
                .then(r => r.json())
                .then(data => {
                    let html = '<option value="">Chọn Category</option>'; // Option mặc định
                    data.forEach(c => {
                        html += `<option value='${c.id}'>${c.name}</option>`;
                    });
                    document.getElementById('categorySelect').innerHTML = html;
                    // Gán giá trị selectedId sau khi dropdown được nạp
                    if (selectedId) {
                        const select = document.getElementById('categorySelect');
                        select.value = selectedId;
                    }
                    return Promise.resolve();
                })
                .catch(error => console.error('Error loading categories:', error));
        }

        // Load product info và đồng bộ set value cho select
        document.addEventListener('DOMContentLoaded', function () {
            const token = getCookie('AccessToken');
            const productId = '@productId'; // Lấy productId từ ViewBag hoặc URL
            Promise.all([
                fetch(`https://localhost:7168/api/ProductsManagement/${productId}`, {
                    headers: { 'Authorization': 'Bearer ' + token },
                    credentials: 'include'
                }).then(r => r.json()),
                loadBrands(),
                loadCategories()
            ]).then(([prod]) => {
                document.getElementById('productName').value = prod.name;
                document.getElementById('price').value = prod.price;
                document.getElementById('stockQuantity').value = prod.stockQuantity;
                document.getElementById('brandSelect').value = prod.brandId;
                document.getElementById('categorySelect').value = prod.categoryId;
                // ... set các trường khác nếu cần
            });

            if (prod.imageUrl) {
                document.getElementById('previewImg').src = prod.imageUrl;
                document.getElementById('previewImg').style.display = 'block';
            }
        });

        // Submit form
        document.getElementById('editForm').onsubmit = function(e) {
            e.preventDefault();
            var formData = new FormData(this);
            // Gán lại BrandId/CategoryId từ dropdown (value là id)
            formData.set('Product.BrandId', document.getElementById('brandSelect').value);
            formData.set('Product.CategoryId', document.getElementById('categorySelect').value);
            fetch(`https://localhost:7168/api/ProductsManagement/${productId}`, {
                method: 'PUT',
                body: formData,
                headers: { 'Authorization': 'Bearer ' + getCookie('AccessToken') },
                credentials: 'include'
            })
            .then(res => {
                if(res.ok) window.location.href = '/StaffProduct/StaffProductList';
                else alert('Cập nhật sản phẩm thất bại!');
            })
            .catch(error => console.error('Error updating product:', error));
        }
    </script>
}