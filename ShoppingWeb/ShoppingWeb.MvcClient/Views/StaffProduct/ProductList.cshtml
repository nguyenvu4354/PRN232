@{
    ViewData["Title"] = "Product List";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Sử dụng layout chung nếu có
}

<!-- Breadcrumb part start -->
<section class="breadcrumb_part">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                    <h2>Product List</h2>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb part end -->

<section class="product_list section_padding">
    <div class="container">
        <div class="row">
            <!-- Sidebar giữ nguyên như template -->
            <div class="col-md-4">
                <div class="product_sidebar">
                    <div class="single_sedebar">
                        <form action="#" onsubmit="return false;">
                            <input type="text"
                                   name="product_search_sidebar"
                                   id="sidebar_search"
                                   placeholder="Search keyword"
                                   onchange="filterProducts()"
                                   onkeyup="filterProducts()"
                                   autocomplete="off">
                            <i class="ti-search"></i>
                        </form>
                    </div>
                    <!-- Có thể bổ sung filter category/type nếu cần -->
                </div>
            </div>
            <div class="col-md-8">
                <div class="product_list">
                    <div class="row" id="product_grid">
                        <!-- Sản phẩm sẽ được render động ở đây bằng JS -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Khi trang load, gọi API lấy danh sách sản phẩm
        document.addEventListener('DOMContentLoaded', function () {
                    fetch('https://localhost:7168/api/ProductsManagement')
                .then(response => response.json())
                .then(data => renderProducts(data))
                .catch(err => {
                    document.getElementById('product_grid').innerHTML = '<p>Lỗi tải sản phẩm!</p>';
                });
        });

        // Hàm render sản phẩm ra grid
        function renderProducts(products) {
            let html = '';
            products.forEach(product => {
                html += `
                <div class="col-lg-4 col-sm-6 single_product_item" data-title="${product.name}">
                    <img src="${product.imageUrl || '/img/product/default.png'}" alt="#" class="img-fluid">
                    <h3>
                        <a href="/Product/Detail/${product.id}">
                            ${product.name}
                        </a>
                    </h3>
                    <p>${product.price ? 'From $' + product.price : ''}</p>
                </div>
                `;
            });
            document.getElementById('product_grid').innerHTML = html;
        }

        // Tìm kiếm sản phẩm theo tên (giữ lại logic filter của bạn)
        function filterProducts() {
            const searchTerm = (document.getElementById('search_input') ? document.getElementById('search_input').value : '') || document.getElementById('sidebar_search').value.toLowerCase();
            const products = document.querySelectorAll('.single_product_item');
            products.forEach(prod => {
                const title = prod.getAttribute('data-title').toLowerCase();
                if (title.includes(searchTerm)) {
                    prod.style.display = '';
                } else {
                    prod.style.display = 'none';
                }
            });
        }
    </script>
} 