@*  
   For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860  
*@  
@{  
}  
@model ShoppingWeb.MvcClient.Controllers.ProductDetailViewModel
<section class="breadcrumb_part single_product_breadcrumb">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb_iner">
                </div>
            </div>
        </div>
    </div>
</section>
   <!--================Single Product Area =================-->  
   <div class="product_image_area">  
       <div class="container">  
           <div class="col justify-content-center" style="display:flex; flex-direction:column">
                <div style="align-self:center">
                    <div class="single_product_img">
                        <img src=@Model.Product.ImageUrl alt="#" class="img-fluid" style="border-radius:20px; max-width:500px; box-shadow: 0 4px 16px rgba(0,0,0,0.15);">
                    </div>
                </div>
               <div>  
                   <div class="single_product_text text-center">  
                       <h3>  
                           @Model.Product.Name  
                       </h3>  
                       <p>  
                           @Model.Product.Description  
                       </p>  

                       <!-- Product Brand and Category -->  
                       <div class="product_brand_category">  
                           <p><strong>Brand:</strong> @Model.Product.Brand</p>  
                           <p><strong>Category:</strong> @Model.Product.Category</p>  
                       </div>  

                       <div class="card_area">  
                           <div class="product_count_area">  
                               <p>Quantity</p>  
                               <div class="product_count d-inline-block">  
                                   <span class="product_count_item inumber-decrement"> <i class="ti-minus"></i></span>  
                                   <input class="product_count_item input-number" type="text" value="1" min="0" max="10">  
                                   <span class="product_count_item number-increment"> <i class="ti-plus"></i></span>  
                               </div>  
                               <p>@Model.Product.Price đ</p>  
                           </div>  
                       </div>

                    <div style="display:flex; gap: 10%; margin:5%; justify-content:center">
                            <div class="add_to_cart">
                                <a class="btn_3" id="addToCartBtn">add to cart</a>
                            </div>
                            @section Scripts {
                                <script>
                                    $(document).on('click', '#addToCartBtn', function () {
                                        var productId = @Model.Product.Id;
                                        var quantity = $('.input-number').val() || 1;

                                        $.ajax({
                                            url: '@Url.Action("AddToCart", "Cart")',
                                            type: 'POST',
                                            data: {
                                                productId: productId,
                                                quantity: quantity
                                            },
                                            success: function (response) {
                                                if (response.redirect) {
                                                    window.location.href = response.url;
                                                }
                                                else{
												    showToast("Product added to cart successfully!");
                                                }
                                            },
                                            error: function () {
                                                alert("Error contacting server.");
                                            }
                                        });
                                    });
                                </script>
                            }
                            
                            <div class="add_to_cart">
                                <a href="#" class="btn_3">add to Wishlist</a>
                            </div>
                       </div>
                   </div>  
               </div>  
           </div>  
       </div>  
   </div>
<div class="review-section mt-5">
    <h4>Customer Reviews</h4>
    @if (Model.ProductReviews.Count == 0)
    {
        <p>No reviews yet.</p>
    }
    else
    {
        foreach (var review in Model.ProductReviews)
        {
            <div class="single-review p-3 mb-2 border rounded">
                <p><strong>@review.FullName</strong> rated: <span>@review.Rating/5</span></p>
                <p>@review.Comment</p>
                <p class="text-muted" style="font-size: 0.85rem;">@review.CreatedAt?.ToLocalTime().ToString("dd MMM yyyy")</p>
            </div>
        }
    }
</div>


   <script>
           function showToast(message, isSuccess = true) {
        // Ensure the toast container exists
        let container = document.getElementById("toast-container");
        if (!container) {
            container = document.createElement("div");
            container.id = "toast-container";
            document.body.appendChild(container);
        }

        // Style the container for proper positioning
        Object.assign(container.style, {
            position: "fixed",
            top: "20px",
            right: "20px",
            zIndex: "9999",
            display: "flex",
            flexDirection: "column",
            gap: "10px",
            pointerEvents: "none" // lets clicks pass through
        });

        // Create the toast element
        const toast = document.createElement("div");
        toast.textContent = message;
        toast.className = "toast-message";
        Object.assign(toast.style, {
            backgroundColor: isSuccess ? "#28a745" : "#dc3545",
            color: "#fff",
            padding: "12px 20px",
            borderRadius: "6px",
            boxShadow: "0 2px 6px rgba(0,0,0,0.2)",
            opacity: "1",
            transition: "opacity 0.5s ease",
            fontSize: "14px",
            pointerEvents: "auto"
        });

        container.appendChild(toast);

        // Fade out after 3 seconds
        setTimeout(() => {
            toast.style.opacity = "0";
            setTimeout(() => {
                toast.remove();
            }, 500);
        }, 3000);
    }
   </script>
   <!--================End Single Product Area =================-->  