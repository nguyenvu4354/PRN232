@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model ShoppingWeb.MvcClient.Controllers.ViewCartModel

<body>
    <!-- breadcrumb part start-->
    <section class="breadcrumb_part">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb_iner">
                        <h2>cart list</h2>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- breadcrumb part end-->
    <!--================Cart Area =================-->
    <section class="cart_area section_padding">
        <div class="container">
            <div class="cart_inner">
                <div class="table-responsive">
                    @if(!Model.Success){
                        <distributed-cache-alert class="alert alert-danger">
							<strong>Error!</strong> @Model.ErrorMessage
                            </distributed-cache-alert>
                    } else if(Model.CartItems.Count == 0) {
                        <div class="alert alert-info">
                            <strong>Info!</strong> Your cart is empty.
						</div>
                    }
                    else
                    {
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Product</th>
                                <th scope="col">Price</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var item in Model.CartItems)
                            {
                                <tr>
                                    <td>
                                        <div class="media">
                                            <div class="d-flex">
                                                    <img src="@item.ProductImage" alt="" style="box-shadow: 0 4px 16px rgba(0,0,0,0.15);" />
                                            </div>
                                            <div class="media-body">
                                                <p>@item.ProductName</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <h5>@item.Price đ</h5>
                                    </td>
                                    <td>
                                        <div class="cart-item" data-product-id="@item.ProductId">
                                            <div class="quantity-wrapper">
                                                <button class="quantity-btn decrement">−</button>
                                                <input type="text"
                                                        class="quantity-input"
                                                        value="@item.Quantity"
                                                        min="1"
                                                        max="99"
                                                        data-product-id="@item.ProductId" />
                                                <button class="quantity-btn increment">+</button>
                                            </div>
                                        </div>
                                    </td>
                                    <td style="display: flex; gap:20px">
                                        <h5>@(item.Quantity * item.Price) đ</h5>
                                        <div class="cart_item_delete">
                                            <form method="post" asp-controller="Cart" asp-action="RemoveFromCart">
                                            <input type="hidden" name="productId" value="@item.ProductId" />
                                            <button type="submit" class="btn btn-danger">Remove</button>
											</form>
										</div>
                                    </td>
                                </tr>
                            }
							    <tr>
                                    <td></td>
                                    <td></td>
                                    <td>
                                        <h5>Subtotal</h5>
                                    </td>
                                    <td>
                                        <h5>@Model.TotalPrice đ</h5>
                                    </td>
                                </tr>
                        </tbody>
                    </table>
                    }
                    <div class="checkout_btn_inner float-right">
                        <a class="btn_1 checkout_btn_1" href="@Url.Action("Checkout", "Order", new { cartId = Model.CartId})">Proceed to checkout</a>
                    </div>
                </div>
            </div>
    </section>
    <!--================End Cart Area =================-->
</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.quantity-btn').on('click', function () {
            const $wrapper = $(this).closest('.quantity-wrapper');
            const $input = $wrapper.find('.quantity-input');
            let value = parseInt($input.val()) || 1;
            const min = parseInt($input.attr('min')) || 1;
            const max = parseInt($input.attr('max')) || 99;
            const productId = $input.data('product-id');

            if ($(this).hasClass('increment') && value < max) {
                value++;
            } else if ($(this).hasClass('decrement') && value > min) {
                value--;
            }

            $input.val(value);

            $.ajax({
                url: '/Cart/UpdateCart',
                type: 'POST',
                data: {
                    productId: productId,
                    quantity: value
                },
                success: function (response) {
                    showToast('Quantity updated.', true);
					location.reload(); // Reload the page to reflect changes
                },
                error: function () {
                    showToast('Failed to update quantity.', false);
                }
            });
        });
    });
</script>
<script>
           function showToast(message, isSuccess = true) {
        // Ensure the toast container exists
        let container = document.getElementById("toast-container");
        if (!container) {
            container = document.createElement("div");
            container.id = "toast-container";
            document.body.appendChild(container);
        }

        // Style the container for proper positioning
        Object.assign(container.style, {
            position: "fixed",
            top: "20px",
            right: "20px",
            zIndex: "9999",
            display: "flex",
            flexDirection: "column",
            gap: "10px",
            pointerEvents: "none" // lets clicks pass through
        });

        // Create the toast element
        const toast = document.createElement("div");
        toast.textContent = message;
        toast.className = "toast-message";
        Object.assign(toast.style, {
            backgroundColor: isSuccess ? "#28a745" : "#dc3545",
            color: "#fff",
            padding: "12px 20px",
            borderRadius: "6px",
            boxShadow: "0 2px 6px rgba(0,0,0,0.2)",
            opacity: "1",
            transition: "opacity 0.5s ease",
            fontSize: "14px",
            pointerEvents: "auto"
        });

        container.appendChild(toast);

        // Fade out after 3 seconds
        setTimeout(() => {
            toast.style.opacity = "0";
            setTimeout(() => {
                toast.remove();
            }, 500);
        }, 3000);
    }
</script>
@if(TempData["Error"] != null)
{
    <script>
        $(document).ready(function () {
            showToast('@TempData["Error"]', false);
        });
    </script>
}
<style>
    .quantity-wrapper {
        display: flex;
        align-items: center;
        gap: 5px;
        max-width: 140px;
    }

    .quantity-input {
        width: 50px;
        text-align: center;
    }

    .quantity-btn {
        padding: 5px 10px;
        font-size: 16px;
        cursor: pointer;
    }
</style>